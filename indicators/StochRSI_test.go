package indicators

import (
	"reflect"
	"testing"
)

func TestMinRSI(t *testing.T) {
	min, _ := minRSI([]float64{1, 5, 8, 3, 4, 5, 6, 6, 6, 2, 3, 1, 8, 4, 3, 5, 4, 4, 55, 88}, 14)
	if min != 43.33333333333333 {
		t.Error("Запрошено 43.33333333333333, получено", min)
	}
}

func TestMaxRSI(t *testing.T) {
	max, _ := maxRSI([]float64{1, 5, 8, 3, 4, 5, 6, 6, 6, 2, 3, 1, 8, 4, 3, 5, 4, 4, 55, 88}, 14)
	if max != 88.78504672897196 {
		t.Error("Запрошено 88.78504672897196, получено", max)
	}
}

func TestStochRSI(t *testing.T) {
	k, d, _ := StochRSI([]float64{1, 5, 8, 3, 4, 5, 6, 6, 6, 2, 3, 1, 8, 4, 3, 5, 4, 4, 55, 88, 44, 33, 33, 22, 22, 21, 7, 8, 9}, 14, 9, 3, 3)

	needK, needD := []float64{27.76363458337413, 27.183330391991905, 27.62279444748673, 18.368249586362023, 10.557319051938594, 3.002171420206405}, []float64{27.76363458337413, 27.183330391991905, 27.523253140950924, 24.391458141946885, 18.849454361929116, 10.642580019502342}

	if !reflect.DeepEqual(k, needK) {
		t.Error("Запрошено быстрый StochRSI", needK, "получено", k)
	}

	if !reflect.DeepEqual(d, needD) {
		t.Error("Запрошено медленный StochRSI", needD, "получено", d)
	}
}
